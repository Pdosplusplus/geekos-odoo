<?xml version="1.0" encoding="UTF-8"?>
<odoo>
  <data>

    <!-- Data file form 

    @ function: Crear y modificar registros 
    @ Descrip: Este data file define como sera el formulario, que datos seran registrados por el usuario etc
    -->
    <record model="ir.ui.view" id="project_form_view">

      <field name="name">project.form</field>
      <field name="model">agili.project</field>
      <field name="arch" type="xml">

        <form string="Project Form">
 
          <sheet>
            <!-- Agrupamos los campos generales de un proyecto -->
            <group string="General" attrs="{'invisible': [('id', '!=', False)]}">
              <field name='id' invisible='True'/>
              <field name="name" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="description" attrs="{'invisible': [('id', '!=', False)]}"/>
            </group>

            <!-- Agrupamos los campos que generan la toma de decisiones-->
            <group string="Control" attrs="{'invisible': [('id', '!=', False)]}">
              <field name="start_date" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="end_date" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="days_plan" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="days_exe" readonly="1" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="pj_progress" readonly="1" attrs="{'invisible': [('id', '!=', False)]}"/>
              <field name="pj_work_real" readonly="1" attrs="{'invisible': [('id', '!=', False)]}"/>
            </group>


            <!-- Notebook
              @Function: Crear un cuaderno, agrupar mejor la información.

              @Description: Este data file nos permite crear un cuaderno con paginas; donde cada page es una pestaña. 
            -->

            <group string="Plan de Trabajo"/>

            <notebook>

              <!-- Page Responsibles
                
                @Function: Añadir resposables a un proyecto

                @Description: Esta page del notebook nos permite añadir resposables al proyecto y mostramos una lista de ellos solo con los campos necesarios.
              -->
              <page string="Responsables">
                <field name="responsible_ids"
                  options="{'no_create': True}"
                  />
              </page>

            </notebook>


            <notebook>

               <!-- Page Plan de trabajo 
  
                @Function: Añadir un plan de trabajo a un proyecto

                @Description: Esta page del notebook nos permite añadir un plan de trabajo al proyecto y mostramos una lista de ellos solo con los campos necesarios.
              -->

              <page string="Servicios / Hitos" attrs="{'invisible': [('id', '==', False)]}">
                <field name="milestone_ids">
                  <tree string="Añade un hito al plan de trabajo" editable="bottom">
                    <field name="name"/>
                    <field name="ms_start_date"/>
                    <field name="ms_end_date"/>
                    <field name="ms_days_plan"/>
                    <field name="ms_days_exe"/>
                    <field name="ms_work_real"/>
                    <field name="ms_responsible_id"/>
                  </tree>
                </field>
              </page>

            </notebook>

            <notebook>
              <page string="Entregables" attrs="{'invisible': [('id', '==', False)]}">
                <field name="deliverable_ids">
                  <tree string="Añade un Entregable al plan de trabajo" editable="bottom">
                    <field name="dl_milestone_id"/>
                    <field name="name"/>
                    <field name="dl_start_date"/>
                    <field name="dl_end_date"/>
                    <field name="dl_days_plan"/>
                    <field name="dl_days_exe"/>
                    <field name="dl_responsible_id"/>
                  </tree>
                </field>
              </page>
            </notebook>

            <notebook>
               <page string="Actividades" attrs="{'invisible': [('id', '==', False)]}">
                <field name="activity_ids">
                  <tree string="Añade una Actividad al plan de trabajo" editable="bottom">
                    <field name="ac_deliverable_id"/>
                    <field name="name"/>
                    <field name="ac_start_date"/>
                    <field name="ac_end_date"/>
                    <field name="ac_responsible_id"/>
                    <field name="ac_days_exe"/>
                    <field name="ac_work_real"/>
                    <field name="ac_progress"/>
                  </tree>
                </field>
              </page>
            </notebook>

          </sheet>
        </form>

      </field>

    </record>

    <!-- Record search 
      @Function: Para realizar la busqueda de los registros
      
      @Description: Con elrecord search definimos de que manera seran buscado los registros, definiendo por cuales campos se haran las busquedas, añadiendo domain entre otros.
    -->
    <record model="ir.ui.view" id="project_search_view">

      <field name="name">project.search</field>
      <field name="model">agili.project</field>

      <field name="arch" type="xml">
        <search>
          <field name="name"/>
          <field name="days_plan"/>
          <field name="description"/>

          <!-- Filter
          
            @Function: Añadir condiciones a las busuqedes

            @Description: En este caso añadimos un filter para que solo sean mostrados los proyectos del usuario logueado.
          -->
          <filter name="my_projects" 
                  string="Mis proyectos"
                  domain="[('responsible_ids', '=', uid)]"/>

          <!-- Invocamos al filter creado anteriormente -->
          <group string="Group By">
            <filter name="by_responsible" 
                    string="Responsable" 
                  context="{'group_by': 'responsible_ids'}"
            />
          </group>
        </search>

      </field>

    </record>

    <!-- Record tree

      @Function: Listar la información en una tabla

      @Description: Record para mostrar la información en un modelo, donde cada field es una columna.
    -->
    <record model="ir.ui.view" id="project_tree_view">
      <field name="name">project.tree</field>
      <field name="model">agili.project</field>

      <field name="arch" type="xml">
          
        <tree string="Project Tree">
          <field name="name"/>
          <field name="start_date"/>
          <field name="end_date"/>
          <field name="days_plan"/>
          <field name="days_exe"/>
          <field name="pj_work_real"/>
          <field name="pj_progress"/>
        </tree>
        
      </field>

    </record>

    <!-- Record Calendar

       @Function: Mostrar mediante un calendario las fechas de inicio y fin de los proyectos
    -->
    <record model="ir.ui.view" id="project_calendar_view">
      <field name="name">project.calendar</field>
      <field name="model">agili.project</field>
      <field name="arch" type="xml">
        
        <calendar string="project Calendar" 
                  date_start="start_date" 
                  date_stop="end_date"
                  color="responsible_ids">

          <field name="name"/>

        </calendar>

      </field>
    </record>

    <!-- Record graph

      @Function: Generar graficos (torta, barras..)

      @Description: Grafica comparativas de cuantas actividades tiene un proyecto con respecto a otro.
    -->
    <record model="ir.ui.view" id="agili_project_graph_view">
      <field name="name">agili.project.graph</field>
      <field name="model">agili.project</field>
      <field name="arch" type="xml">
        <graph string="Avance de los proyectos">
          <field name="name"/>
          <field name="days_plan"/>
          <field name="pj_progress" type="measure"/>
        </graph>
      </field>
    </record>

    <!-- Tag actions.act_window 
    
      @Function: Este tag o record tiene como funcion contralar el flujo de los views a las acciones de los mismos

      @Descripcion: Una de las cosa que ahce este record es definir el modo en que las vistas seran mostradas, en este caso sera primero el <tree>, <form>, <calendar> ,y de ultimo las graficas <graph>.
    -->
    <record model="ir.actions.act_window" id="project_list_action">

      <field name="name">Proyectos</field>
      <field name="res_model">agili.project</field>
      <field name="view_type">form</field>
      <field name="view_mode">tree,form,calendar,graph</field>
      <field name="context" eval="{'search_default_my_projects': 1}"/>

    </record>

     <record id="action_report_general" model="ir.actions.server">

      <field name="name">Report General</field>
      <field name="condition">True</field>
      <field name="type">ir.actions.server</field>
      <field name="model_id" ref="model_agili_project" />
      <field name="state">code</field>
      <field name="code"> action = {
                'type': 'ir.actions.report.xml',
                'report_name': 'agili.report_project_general',
            }</field>

    </record>

    <!-- Añadimos el menu de la barra top -->
    <menuitem id="main_agili_menu" name="Gestion de Cooperativas"/>

    <!-- Añadimos el menu del panel izquierdo -->
    <menuitem id="agili_menu" 
              name="Gestion de Cooperativas"
              parent="main_agili_menu"/>

    <!-- Añadimos un submenu al menu anterior creado, el cual nos lleva a las views de nuestro modelo -->
    <menuitem id="project_menu" name="Proyectos" 
          parent="agili_menu"
          action="project_list_action"/>

    <menuitem id="report_general" name="Reporte de avance general"
          parent="agili_report_menu"
          action="action_report_general"/>

  </data>
</odoo>
